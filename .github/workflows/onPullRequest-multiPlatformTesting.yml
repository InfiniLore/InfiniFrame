name: MultiPlatform Testing

on:
    workflow_dispatch:
        inputs:
            pr_number:
                description: 'Optional: Link this run to a specific Pull Request number'
                required: false
                default: ''

jobs:
    set-pr-context:
        name: Set PR Context
        runs-on: ubuntu-latest
        outputs:
            ref: ${{ steps.ref.outputs.ref }}
        steps:
            - id: ref
              run: |
                  if [ -n "${{ github.event.inputs.pr_number }}" ]; then
                      echo "Using PR #${{ github.event.inputs.pr_number }}"
                      echo "ref=refs/pull/${{ github.event.inputs.pr_number }}/merge" >> "$GITHUB_OUTPUT"
                  else
                      echo "No PR number provided; running on default branch context."
                      echo "ref=${{ github.ref }}" >> "$GITHUB_OUTPUT"
                  fi

    # ---------------------------------------------------------------------------------------
    # Linux (Headless)
    # ---------------------------------------------------------------------------------------
    linux-gui:
        name: Build & Test - Linux
        runs-on: ubuntu-latest
        needs: [set-pr-context]
        steps:
            - uses: actions/checkout@v5
              with:
                  ref: ${{ needs.set-pr-context.outputs.ref }}

            - name: Setup .NET 9 SDK
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '9.x'

            - name: Cache APT packages
              uses: actions/cache@v4
              with:
                  path: |
                      /var/cache/apt/archives
                      /var/lib/apt/lists
                  key: ${{ runner.os }}-apt-${{ hashFiles('**/onPullRequest-multiPlatformTesting.yml') }}
                  restore-keys: |
                      ${{ runner.os }}-apt-

            - name: Cache .NET packages
              uses: actions/cache@v4
              with:
                  path: ~/.nuget/packages
                  key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}
                  restore-keys: |
                      ${{ runner.os }}-nuget-

            - name: Cache .NET build
              uses: actions/cache@v4
              with:
                  path: |
                      **/bin
                      **/obj
                  key: ${{ runner.os }}-build-${{ hashFiles('**/*.cs', '**/*.csproj', '**/*.props') }}
                  restore-keys: |
                      ${{ runner.os }}-build-

            -   name: Install lightweight GUI environment (cached)
                run: |
                    # Update package lists only if cache miss
                    if [ ! -f "/var/lib/apt/lists/lock" ]; then
                        sudo apt-get update
                    fi
                    
                    export DEBIAN_FRONTEND=noninteractive
                    sudo apt-get install -y \
                        xvfb \
                        openbox \
                        x11-utils \
                        x11-xserver-utils \
                        dbus-x11 \
                        libnotify4 \
                        libwebkit2gtk-4.1-dev \
                        libgtk-3-dev \
                        libglib2.0-dev \
                        libgdk-pixbuf2.0-dev \
                        libpango1.0-dev \
                        libatk1.0-dev \
                        libharfbuzz-dev \
                        libepoxy-dev \
                        libx11-dev

            - name: Restore dependencies (cached)
              run: dotnet restore InfiniLore.Photino.GitHubActions.slnf

            - name: Build (Release) (cached)
              run: dotnet build InfiniLore.Photino.GitHubActions.slnf --configuration Release --no-restore

            -   name: Start lightweight desktop and run tests
                run: |
                    echo "Starting lightweight desktop environment..."
                    
                    # Start D-Bus
                    export $(dbus-launch)
                    
                    # Start Xvfb
                    Xvfb :99 -screen 0 1920x1080x24 -ac +extension GLX +render -noreset &
                    export DISPLAY=:99
                    
                    # Wait for X server
                    sleep 3
                    
                    # Start OpenBox window manager
                    openbox --replace &
                    
                    # Wait for window manager
                    sleep 5
                    
                    # Verify setup
                    echo "X11 info:"
                    xdpyinfo | head -5 || echo "xdpyinfo failed"
                    
                    echo "Window manager process:"
                    ps aux | grep openbox | grep -v grep || echo "OpenBox not found in ps"
                    
                    echo "Running tests..."
                    dotnet test InfiniLore.Photino.GitHubActions.slnf \
                    --configuration Release \
                    --no-build \
                    --no-restore

    # ---------------------------------------------------------------------------------------
    # Windows
    # ---------------------------------------------------------------------------------------
    windows-gui:
        name: Build & Test - Windows
        runs-on: windows-latest
        needs: [set-pr-context]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5
              with:
                  ref: ${{ needs.set-pr-context.outputs.ref }}

            - name: Setup .NET 9 SDK
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '9.x'

            - name: Restore dependencies
              run: dotnet restore InfiniLore.Photino.GitHubActions.slnf

            - name: Build (Release)
              run: |
                  dotnet build InfiniLore.Photino.GitHubActions.slnf `
                    --configuration Release `
                    --no-restore `
                    -p:GeneratePackageOnBuild=false `
                    -p:IsPackable=false

            - name: Run tests
              run: |
                  echo "Running tests on Windows..."
                  dotnet test InfiniLore.Photino.GitHubActions.slnf `
                    --configuration Release `
                    --no-build `
                    --no-restore `
                    --logger "console;verbosity=detailed"

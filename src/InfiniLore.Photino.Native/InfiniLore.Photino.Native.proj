<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!-- Cross-platform Visual Studio placeholder for CMake -->
    <PropertyGroup>
        <RestoreProjectStyle>None</RestoreProjectStyle>
        
        <IsWindows>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))</IsWindows>
        <IsLinux>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))</IsLinux>
        <IsMac>$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))</IsMac>

        <!-- Force default platform to x64 if AnyCPU or empty -->
        <Platform Condition="'$(Platform)'=='' Or '$(Platform)'=='AnyCPU' Or '$(Platform)'=='Any CPU'">x64</Platform>

        <!-- map to CMake architecture -->
        <CMakeArch Condition="'$(Platform)'=='x64'">x64</CMakeArch>
        <CMakeArch Condition="'$(Platform)'=='arm64'">ARM64</CMakeArch>
        
        <!-- Fallback in case none matched -->
        <CMakeArch Condition="'$(CMakeArch)'==''">x64</CMakeArch>

        <CMakeBuildDir>build/$(CMakeArch)/$(Configuration)</CMakeBuildDir>
        
        <!-- Output all binaries to a fixed path under the solution -->
        <NativeOutputDir>$(SolutionDir)artifacts/native/$(CMakeArch)/$(Configuration)</NativeOutputDir>
    </PropertyGroup>

    <ItemGroup>
        <!-- Include all project files for VS Solution Explorer -->
        <None Include="CMakeLists.txt" />
        <None Include="**/*.*" Exclude="CMakeLists.txt;" />
    </ItemGroup>

    <!-- Build target -->
    <Target Name="Build">
        <Message Text="Building InfiniLore.Photino.Native ($(Configuration)|$(Platform))" Importance="High" />

        <!-- Create build folder -->
        <MakeDir Directories="$(CMakeBuildDir)" />

        <!-- Windows -->
        <Exec Condition="$(IsWindows)" Command="cmake -B $(CMakeBuildDir) -S . -A $(CMakeArch)" />
        <Exec Condition="$(IsWindows)" Command="cmake --build $(CMakeBuildDir) --config $(Configuration)" />

        <!-- macOS / Linux -->
        <Exec Condition="$(IsMac) Or $(IsLinux)" Command="cmake -B $(CMakeBuildDir) -S . -DCMAKE_OSX_ARCHITECTURES=$(CMakeArch)" />
        <Exec Condition="$(IsMac) Or $(IsLinux)" Command="cmake --build $(CMakeBuildDir) --config $(Configuration)" />

        <!-- Copy native binaries -->
        <MakeDir Directories="$(NativeOutputDir)" />

        <ItemGroup>
            <NativeBinaries Include="$(CMakeBuildDir)/**/*.dll;$(CMakeBuildDir)/**/*.so;$(CMakeBuildDir)/**/*.dylib" />
        </ItemGroup>

        <Copy SourceFiles="@(NativeBinaries)"
              DestinationFolder="$(NativeOutputDir)"
              SkipUnchangedFiles="true" />

        <Message Text="Copied @(NativeBinaries->'%(Filename)%(Extension)') to $(NativeOutputDir)" Importance="High" />
    </Target>

    <!-- Clean target -->
    <Target Name="Clean">
        <Message Text="Cleaning build directory: $(CMakeBuildDir)" Importance="High" />
        <RemoveDir Directories="$(CMakeBuildDir)" />
    </Target>

    <!-- Restore target -->
    <Target Name="Restore">
        <Message Text="Skipping restore for native project." Importance="High"/>
    </Target>
</Project>
